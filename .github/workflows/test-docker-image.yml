name: Test Docked Image build

on:
  push:
    branches:
      - "**"
  pull_request:

jobs:
  build-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-name: rails-test-image-${{ github.sha }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t rails-test-image-${{ github.sha }} .
          docker save rails-test-image-${{ github.sha }} -o image.tar

      - name: Upload Docker image artifact
        uses: actions/upload-artifact@v4
        with:
          name: rails-test-image
          path: image.tar

  test-image:
    name: Rails New - ${{ matrix.scenario.name }}
    runs-on: ubuntu-latest
    needs: build-image

    strategy:
      fail-fast: false
      matrix:
        scenario:
          - name: basic
            command: rails new /app
          - name: postgres
            command: rails new /app --database=postgresql
          - name: mysql
            command: rails new /app --database=mysql
          - name: trilogy
            command: rails new /app --database=trilogy
          - name: mariadb-mysql
            command: rails new /app --database=mariadb-mysql
          - name: mariadb-trilogy
            command: rails new /app --database=mariadb-trilogy

    steps:
      - name: Download built Docker image
        uses: actions/download-artifact@v4
        with:
          name: rails-test-image
          path: .

      - name: Load Docker image
        run: |
          docker load -i image.tar

      - name: Run rails new - ${{ matrix.scenario.name }}
        run: |
          docker run --rm rails-test-image-${{ github.sha }} bash -c "
            set -e
            echo 'Running: ${{ matrix.scenario.command }}'
            ${{ matrix.scenario.command }} && cd /app && bin/rails --version
            echo 'âœ… Success: ${{ matrix.scenario.command }}'
          "
